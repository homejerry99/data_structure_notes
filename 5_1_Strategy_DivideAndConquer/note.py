'''
分治策略
正如字面意思，将一个大的问题分解为多个相同或相似的更小规模子问题，然后将更好解决的子问题答案能拼成大问题的答案
使用场景：
1.问题缩小到一定规模能轻松解决
2.问题可以缩小为多个更小的相同问题（如果不同还是会很麻烦，不能用同一种方式解决...
3.子问题的答案可以合成最终答案（这是最关键的，显然如果更小规模的同类问题答案与解决大问题无关，这方法就没用了...
4.各个子问题相互独立，子问题之间不含公共子问题

这些内容很容易能看出分治策略和递归的关联
几个条件中，2.是分治问题的特征，3.是能否使用分治策略的关键，如果不满足3.则建议使用动态规划和贪心策略，4.与分治策略的效率相关，如果公共子问题很多，分治将不是那么方便，建议使用动态规划

基本步骤：
1.分解：分解大问题变成小规模同类
2.解决小问题：解决小问题，当然如果没法简单解决可以再把小问题分解
3.合并：将小问题的解合成大问题的解

分治策略的经典问题：
1.二分搜索
（针对orderedList的搜索法，先看最中央元素，因为是有序的list，所以通过比较被查元素和中央的大小可以确定被查元素在那个区段，然后把对应区段再分出来，也是orderedList，继续递归...
2.大整数乘法
3.Strassen矩阵乘法
4.棋盘覆盖
5.合并排序
6.快速排序
7.线性时间选择
8.最接近点对问题
9.循环赛日程表
10.汉诺塔
（Done，见4_4）（不过乌龟寻路那个倒是没做完...
'''